# deployment for grafana+ prometheus
# docker-compose up --force-recreate --build -d && docker logs -f prometheus
version : '2'

services:
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
#    ports:
#      - 3000:3000
    volumes:
      - 'grafana-volume:/var/lib/grafana'
    environment:
      - "GF_SECURITY_ADMIN_PASSWORD=secret123*"
      - "VIRTUAL_HOST=graph.local.com"
      - "VIRTUAL_PORT=3000"
      - "GF_SERVER_ROOT_URL=http://graph.local.com"
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 0.0.0.0:9020:9090
#    volumes:
#      - ./config/prometheus/:/etc/prometheus/:z
#      - prometheus_data:/prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
    environment:
      - "VIRTUAL_HOST=prom.local.com"
      - "VIRTUAL_PORT=9090"
# not recommanded to run node-exporter on docker container
# refer to  node-exporter:https://github.com/prometheus/node_exporter#using-docker
#  node-exporter:
#    image: prom/node-exporter
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#    command:
#      - '--path.procfs=/host/proc'
#      - '--path.sysfs=/host/sys'
#      - --collector.filesystem.ignored-mount-points
#      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|roo$
#    ports:
#      - 9100:9100
#    restart: always
  nginx:
    image: 'jwilder/nginx-proxy'
    volumes:
       - '/var/run/docker.sock:/tmp/docker.sock:ro'
 #      - '/etc/nginx/certs:/etc/nginx/certs'
  #     - './config_proxy_spec.conf:/etc/nginx/conf.d/config_proxy_spec.conf:ro'
    ports:
      - '80:80'
      - '443:443'
    security_opt:
      - label:type:docker_t
    restart: unless-stopped
    container_name: nginx
volumes:
  grafana-volume:
#  prometheus_data:
